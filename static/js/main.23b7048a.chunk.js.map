{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","el","getUserById","userId","usersFromServer","find","tasksWithTodo","App","useState","setTitle","currentUserId","setCurrentUserId","setTodos","hasTitleError","setHasTitleError","hasUserError","setHasUserError","getTodoId","getId","Math","max","action","method","onSubmit","event","preventDefault","newTodo","currentTodos","type","value","placeholder","onChange","newTitle","target","newUser","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23b7048a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n    {user?.name}\n  </a>\n);\n","import cn from 'classnames';\nimport { TasksWithTodo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: TasksWithTodo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={cn(\n      'TodoInfo',\n      { 'TodoInfo--completed': todo.completed },\n    )}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    <UserInfo user={todo.user} />\n  </article>\n);\n","import { TodoInfo } from '../TodoInfo';\nimport { TasksWithTodo } from '../../types/Todo';\n\ntype Props = {\n  todos: TasksWithTodo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(el => (\n      <TodoInfo todo={el} />\n    ))}\n  </section>\n);\n","import { useState } from 'react';\nimport './App.scss';\n// import cn from 'classnames';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TasksWithTodo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst tasksWithTodo: TasksWithTodo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [currentUserId, setCurrentUserId] = useState(0);\n  const [todos, setTodos] = useState(tasksWithTodo);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n  const getTodoId = tasksWithTodo.map(todo => todo.id);\n  const getId = Math.max(...getTodoId) + 1;\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = event.target.value;\n\n    setTitle(newTitle);\n\n    if (newTitle) {\n      setHasTitleError(false);\n    }\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newUser = +event.target.value;\n\n    setCurrentUserId(newUser);\n\n    if (newUser !== 0) {\n      setHasUserError(false);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title) {\n      setHasTitleError(true);\n    } else {\n      setHasTitleError(false);\n    }\n\n    if (!currentUserId) {\n      setHasUserError(true);\n    } else {\n      setHasUserError(false);\n    }\n\n    const newTodo: TasksWithTodo = {\n      id: getId,\n      title,\n      userId: currentUserId,\n      user: getUserById(currentUserId),\n      completed: false,\n    };\n\n    if (title && currentUserId) {\n      setTodos(currentTodos => [...currentTodos, newTodo]);\n      setTitle('');\n      setCurrentUserId(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          {'Title: '}\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            placeholder=\"Enter a title\"\n            onChange={handleTitleChange}\n          />\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          {'User: '}\n          <select\n            value={currentUserId}\n            data-cy=\"userSelect\"\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(el => (\n              <option\n                key={el.id}\n                value={el.id}\n              >\n                {el.name}\n              </option>\n            ))}\n          </select>\n          {hasUserError\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}